---
const trabalhos = [
  {
    id: 1,
    titulo: "Poltrona feita com com capô de fusca",
    categoria: "Mobiliário",
    imagem: "/images/arts/eujafuiumfusca.webp",
    descricao: "Nada está perdido, com criatividade tudo se transforma! Poltrona feita com com capô de fusca!"
  },
  {
    id: 2,
    titulo: "Escultura Onda",
    categoria: "Escultura",
    imagem: "/images/arts/ondaderesiduo.webp",
    descricao: "Escultura Onda - feita com resíduos coletados e separados pela área de gestão ambiental da empresa Tv Globo em praias e atividades externas."
  },
  {
    id: 3,
    titulo: "Armanda",
    categoria: "Decoração",
    imagem: "/images/arts/quadrodemnaeira.webp",
    descricao: "Quadro desenvolvido apenas com colagens de diferentes tipos de madeiras."
  },
  {
    id: 4,
    titulo: "Banco Sol",
    categoria: "Decoração",
    imagem: "/images/arts/bancodesol.webp",
    descricao: " Banco Sol brilhando no sambódromo! ✨ Recarregue as energias (do celular e as suas!) e celebre a sustentabilidade. "
  },
  {
    id: 5,
    titulo: "Escultura com leques e pulseiras",
    categoria: "Mobiliário",
    imagem: "/images/arts/concha.png",
    descricao: "A convite da aborda arte criamos essa escultura com leques e pulseiras de quase 3 metros para a shell."
  },
  {
    id: 6,
    titulo: "Planeta Pet",
    categoria: "Decoração",
    imagem: "/images/arts/IMG_8016.JPG",
    descricao: "Escultura de 5 metros com mais de 3000 garrafas pet feita para campeonato mundial de surf em Saquarema-Rj"
  },
  {
    id: 7,
    titulo: "Balanço Orelhão",
    categoria: "Decoração",
    imagem: "/images/arts/balancoorelhao.webp",
    descricao: ""
  },

  {
    id: 8,
    titulo: "Escultura Baleia",
    categoria: "Decoração",
    imagem: "/images/arts/baleia.webp",
    descricao: ""
  },
  {
    id: 9,
    titulo: "Escultura Polvo",
    categoria: "Decoração",
    imagem: "/images/arts/peixe2.png",
    descricao: "O pedido era que utilizássemos plásticos de uso doméstico e o desafio foi justamente compor com elementos pequenos e criar essa mega escultura rica em detalhes, do jeito que sempre quis fazer."
  }
];

const categorias = ["Todos", ...new Set(trabalhos.map(item => item.categoria))];
---

<section id="trabalhos" class="section trabalhos">
  <div class="container">
    <div class="section-header">
      <h2>Portfólio</h2>
      <div class="divider"></div>
      <p>Conheça algumas das criações que transformaram materiais descartados em peças únicas.</p>
    </div>
    
    <div class="filtro-categorias">
      <ul>
        {categorias.map((categoria, index) => (
          <li>
            <button 
              class={index === 0 ? "filtro-btn active" : "filtro-btn"} 
              data-categoria={categoria}
            >
              {categoria}
            </button>
          </li>
        ))}
      </ul>
    </div>
    
    <div class="trabalhos-grid">
      {trabalhos.map(trabalho => (
        <div class="trabalho-item" data-categoria={trabalho.categoria}>
          <div class="trabalho-img">
            <img src={trabalho.imagem} alt={trabalho.titulo} />
            <div class="trabalho-overlay">
              <div class="trabalho-info">
                <h3>{trabalho.titulo}</h3>
                <p>{trabalho.descricao}</p>
                <span class="categoria-tag">{trabalho.categoria}</span>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
    
    <div class="trabalhos-cta">
      <a href="https://api.whatsapp.com/send?phone=5521982221872&text=oi%2C%20vim%20do%20seu%20site" target="_blank" class="btn">Solicite um Projeto</a>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const filtroButtons = document.querySelectorAll('.filtro-btn');
    const trabalhoItems = document.querySelectorAll('.trabalho-item');
    
    filtroButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Remove active class from all buttons
        filtroButtons.forEach(btn => btn.classList.remove('active'));
        
        // Add active class to clicked button
        button.classList.add('active');
        
        const categoria = button.getAttribute('data-categoria');
        
        // Filter items
        trabalhoItems.forEach(item => {
          // Este bloco verifica se o item deve ser mostrado ou escondido
          if (categoria === 'Todos' || item.getAttribute('data-categoria') === categoria) {
            // Se o item corresponde à categoria selecionada ou se "Todos" foi selecionado
            item.style.display = 'block'; // Primeiro torna o item visível
            setTimeout(() => {
              item.classList.add('show'); // Depois adiciona a classe que anima a entrada
            }, 50); // Pequeno atraso para garantir que a animação funcione
          } else {
            // Se o item não corresponde à categoria selecionada
            item.classList.remove('show'); // Remove a classe de animação primeiro
            setTimeout(() => {
              item.style.display = 'none'; // Depois esconde o elemento após a animação terminar
            }, 300); // Atraso correspondente à duração da transição CSS
          }
        });
      });
    });
    
    // Initialize with all items visible
    trabalhoItems.forEach(item => {
      item.classList.add('show');
    });
  });
</script>

<style>
  .trabalhos {
    background-color: white;
  }
  
  .section-header p {
    max-width: 600px;
    margin: 1rem auto 0;
    font-size: 1.1rem;
  }
  
  .filtro-categorias {
    margin: 2rem 0 3rem;
  }
  
  .filtro-categorias ul {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 1rem;
    list-style: none;
  }
  
  .filtro-btn {
    background: none;
    border: 1px solid var(--color-primary);
    padding: 0.5rem 1.5rem;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.3s ease;
    font-family: var(--font-family);
  }
  
  .filtro-btn:hover, .filtro-btn.active {
    background-color: var(--color-primary);
    color: var(--color-secondary);
  }
  
  .trabalhos-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
  }
  
  .trabalho-item {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.5s ease, transform 0.5s ease;
  }
  
  .trabalho-item.show {
    opacity: 1;
    transform: translateY(0);
  }
  
  .trabalho-img {
    position: relative;
    overflow: hidden;
    border-radius: 2px;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    aspect-ratio: 3/4;
  }
  
  .trabalho-img img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }
  
  .trabalho-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .trabalho-img:hover img {
    transform: scale(1.05);
  }
  
  .trabalho-img:hover .trabalho-overlay {
    opacity: 1;
  }
  
  .trabalho-info {
    text-align: center;
    padding: 2rem;
    color: white;
  }
  
  .trabalho-info h3 {
    font-size: 1.3rem;
    margin-bottom: 0.5rem;
  }
  
  .trabalho-info p {
    font-size: 0.9rem;
    margin-bottom: 1rem;
  }
  
  .categoria-tag {
    display: inline-block;
    padding: 0.3rem 1rem;
    background-color: rgba(255, 255, 255, 0.2);
    border-radius: 20px;
    font-size: 0.8rem;
  }
  
  .trabalhos-cta {
    margin-top: 4rem;
    text-align: center;
  }
  
  @media (max-width: 768px) {
    .trabalhos-grid {
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 1.5rem;
    }
  }
</style>